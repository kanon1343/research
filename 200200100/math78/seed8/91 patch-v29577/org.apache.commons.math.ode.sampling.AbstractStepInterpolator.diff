--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,12 +89,12 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    this.forward = forward;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    this.forward = forward;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,9 +113,10 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	interpolatedState = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
+    h = Double.NaN;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -271,6 +272,10 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
+		{
+			doFinalize();
+			finalized = true;
+		}
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
