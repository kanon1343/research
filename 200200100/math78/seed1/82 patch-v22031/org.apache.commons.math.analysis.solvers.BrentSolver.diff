--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -155,7 +154,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -261,7 +259,9 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
-                    p1 = 1.0 - r3;
+                    clearResult();
+					clearResult();
+					p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
@@ -280,6 +280,14 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
+					{
+						x0 = x1;
+						x1 = x2;
+						x2 = x0;
+						y0 = y1;
+						y1 = y2;
+						y2 = y0;
+					}
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
