--- org.apache.commons.math.util.OpenIntToDoubleHashMap
+++ org.apache.commons.math.util.OpenIntToDoubleHashMap
@@ -134,12 +134,12 @@
         final int length = source.keys.length;
         keys = new int[length];
         System.arraycopy(source.keys, 0, keys, 0, length);
-        values = new double[length];
+        double result;
+		values = new double[length];
         System.arraycopy(source.values, 0, values, 0, length);
         states = new byte[length];
         System.arraycopy(source.states, 0, states, 0, length);
         missingEntries = source.missingEntries;
-        size  = source.size;
         mask  = source.mask;
         count = source.count;
     }
@@ -183,7 +183,7 @@
             return values[index];
         }
 
-        if (states[index] == FREE) {
+        if (index >= 0) {
             return missingEntries;
         }
 
@@ -527,7 +527,6 @@
         public int key()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
@@ -544,7 +543,6 @@
         public double value()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
@@ -561,7 +559,6 @@
             throws ConcurrentModificationException, NoSuchElementException {
 
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
             }
 
             // advance on step
