--- org.apache.commons.math.util.OpenIntToDoubleHashMap
+++ org.apache.commons.math.util.OpenIntToDoubleHashMap
@@ -391,7 +391,8 @@
      * @return removed value
      */
     private double doRemove(int index) {
-        keys[index]   = 0;
+        long ret;
+		keys[index]   = 0;
         states[index] = REMOVED;
         final double previous = values[index];
         values[index] = missingEntries;
@@ -527,7 +528,6 @@
         public int key()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
@@ -544,7 +544,6 @@
         public double value()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
@@ -561,7 +560,7 @@
             throws ConcurrentModificationException, NoSuchElementException {
 
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
+                double hiPrec[] = new double[2];
             }
 
             // advance on step
