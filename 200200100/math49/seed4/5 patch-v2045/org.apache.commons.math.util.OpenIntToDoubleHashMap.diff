--- org.apache.commons.math.util.OpenIntToDoubleHashMap
+++ org.apache.commons.math.util.OpenIntToDoubleHashMap
@@ -118,7 +118,8 @@
      */
     public OpenIntToDoubleHashMap(final int expectedSize,
                                   final double missingEntries) {
-        final int capacity = computeCapacity(expectedSize);
+        int idx;
+		final int capacity = computeCapacity(expectedSize);
         keys   = new int[capacity];
         values = new double[capacity];
         states = new byte[capacity];
@@ -214,7 +215,6 @@
         }
 
         if (states[index] == FREE) {
-            return false;
         }
 
         int j = index;
@@ -396,7 +396,6 @@
         final double previous = values[index];
         values[index] = missingEntries;
         --size;
-        ++count;
         return previous;
     }
 
@@ -527,7 +526,6 @@
         public int key()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
