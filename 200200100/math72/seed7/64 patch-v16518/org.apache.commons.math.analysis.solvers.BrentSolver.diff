--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,19 +99,20 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double fb;
+			return result;
         }
 
-        // return the first endpoint if it is good enough
+        clearResult();
+		// return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (f == null) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -235,6 +235,7 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -248,6 +249,7 @@
                 return result;
             }
             double dx = x2 - x1;
+			this.iterationCount = iterationCount;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
             if (Math.abs(dx) <= tolerance) {
