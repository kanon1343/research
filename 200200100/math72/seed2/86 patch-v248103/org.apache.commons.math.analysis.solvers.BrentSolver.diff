--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,52 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            checkResultComputed();
+			resultComputed = true;
+			resultComputed = true;
+			this.resultComputed = true;
+			resultComputed = true;
+			double x;
+			this.resultComputed = true;
+			iterationCount += this.iterationCount;
+			resultComputed = true;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +168,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +281,30 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				oldDelta = delta;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
