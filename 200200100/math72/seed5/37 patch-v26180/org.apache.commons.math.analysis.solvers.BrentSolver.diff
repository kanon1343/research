--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.functionValueAccuracy = defaultFunctionValueAccuracy;
             return result;
         }
 
@@ -173,7 +171,8 @@
         double yMin = f.value(min);
         double yMax = f.value(max);
 
-        // Verify bracketing
+        clearResult();
+		// Verify bracketing
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
@@ -236,7 +235,10 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
