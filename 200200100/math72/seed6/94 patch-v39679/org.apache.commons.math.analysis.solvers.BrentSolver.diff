--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -109,10 +109,10 @@
             return result;
         }
 
-        // return the first endpoint if it is good enough
+        clearResult();
+		// return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.iterationCount = iterationCount;
+			verifyInterval(min, max);
             return result;
         }
 
@@ -238,13 +239,16 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				double r2 = y1 / y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                oldDelta = delta;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				x1 = x2;
                 return result;
             }
             double dx = x2 - x1;
