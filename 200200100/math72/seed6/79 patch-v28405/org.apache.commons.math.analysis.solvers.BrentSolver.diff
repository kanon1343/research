--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double m;
             return result;
         }
 
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            clearResult();
             return result;
         }
 
@@ -241,7 +241,10 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                this.iterationCount = iterationCount;
+				oldDelta = delta;
+				this.iterationCount = iterationCount;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
@@ -306,6 +309,10 @@
                 x1 = x1 - 0.5 * tolerance;
             }
             y1 = f.value(x1);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
