--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -182,7 +182,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                return min;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,7 +229,23 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
