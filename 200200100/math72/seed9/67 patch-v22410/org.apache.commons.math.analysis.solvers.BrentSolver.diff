--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.iterationCount = iterationCount;
+			this.iterationCount = iterationCount;
             return result;
         }
 
@@ -166,7 +166,8 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
+        double fm;
+		verifyInterval(min, max);
 
         double ret = Double.NaN;
 
@@ -241,7 +242,10 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				resultComputed = true;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
