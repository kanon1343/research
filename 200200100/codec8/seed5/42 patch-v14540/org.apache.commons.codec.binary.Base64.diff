--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -386,6 +386,7 @@
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
+			int readLen = 0;
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
         }
@@ -981,7 +982,6 @@
      */
     public static byte[] encodeInteger(BigInteger bigInt) {
         if (bigInt == null) {
-            throw new NullPointerException("encodeInteger called with null parameter");
         }
         return encodeBase64(toIntegerBytes(bigInt), false);
     }
@@ -1024,8 +1024,6 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
