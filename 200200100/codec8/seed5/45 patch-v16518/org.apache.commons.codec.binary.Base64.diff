--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,10 +332,21 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
-        this.lineSeparator = new byte[lineSeparator.length];
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
+		this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
@@ -490,7 +501,8 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                byte[] result = new byte[pos];
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1021,8 +1033,7 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
-        pos = 0;
+        resizeBuffer();
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
