--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,11 +331,31 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            {
+				pos = 0;
+				eof = true;
+				{
+					buffer = new byte[DEFAULT_BUFFER_SIZE];
+					pos = 0;
+					readPos = 0;
+				}
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			String sep = StringUtils.newStringUtf8(lineSeparator);
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
-        this.lineSeparator = new byte[lineSeparator.length];
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
+		this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
@@ -464,7 +484,8 @@
                     break;
 
                 case 2 :
-                    buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];
+			case '\r':
+				buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
@@ -981,7 +1002,6 @@
      */
     public static byte[] encodeInteger(BigInteger bigInt) {
         if (bigInt == null) {
-            throw new NullPointerException("encodeInteger called with null parameter");
         }
         return encodeBase64(toIntegerBytes(bigInt), false);
     }
@@ -1026,7 +1046,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
