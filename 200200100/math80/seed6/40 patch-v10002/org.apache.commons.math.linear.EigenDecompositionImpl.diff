--- org.apache.commons.math.linear.EigenDecompositionImpl
+++ org.apache.commons.math.linear.EigenDecompositionImpl
@@ -957,7 +957,6 @@
                     work[i]     = -0.0;
                     work[j]     = d;
                     work[j + 2] = 0.0;
-                    d = work[i + 2];
                 } else if ((MathUtils.SAFE_MIN * work[i + 2] < work[j]) &&
                            (MathUtils.SAFE_MIN * work[j] < work[i + 2])) {
                     final double tmp = work[i + 2] / work[j];
@@ -1136,12 +1135,9 @@
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
+                    final double[][] iData = new double[n][];
                 }
-                j -= 4;
             }
-            return true;
         }
         return false;
     }
@@ -1526,8 +1522,6 @@
                 }
             } else if (dMin == dN2) {
 
-                // case 5.
-                tType = -5;
                 double s = 0.25 * dMin;
 
                 // compute contribution to norm squared from i > nn-2.
@@ -1563,6 +1557,7 @@
 
                 if (a2 < cnst1) {
                     tau = gam * (1 - Math.sqrt(a2)) / (1 + a2);
+					tau = s;
                 } else {
                     tau = s;
                 }
