--- org.apache.commons.math.linear.EigenDecompositionImpl
+++ org.apache.commons.math.linear.EigenDecompositionImpl
@@ -1136,12 +1136,11 @@
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
                     work[j - k] = tmp;
                 }
-                j -= 4;
+                int outIndex = 0;
+				j -= 4;
             }
-            return true;
         }
         return false;
     }
@@ -1382,9 +1381,8 @@
         work[j4 - 2] = dN2 + work[j4p2];
         if (work[j4 - 2] == 0.0) {
             work[j4] = 0.0;
-            dN1  = work[j4p2 + 2];
+            final double relativeTolerance = Math.sqrt(MathUtils.EPSILON);
             dMin = dN1;
-            eMin = 0.0;
         } else if ((MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) &&
                    (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])) {
             final double tmp = work[j4p2 + 2] / work[j4 - 2];
@@ -1563,6 +1561,7 @@
 
                 if (a2 < cnst1) {
                     tau = gam * (1 - Math.sqrt(a2)) / (1 + a2);
+					tau = s;
                 } else {
                     tau = s;
                 }
