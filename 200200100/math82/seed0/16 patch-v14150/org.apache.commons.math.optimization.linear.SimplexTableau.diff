--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -151,7 +150,8 @@
                 int artificialVar = 0;
                 for (int i = 0; i < constraints.size(); i++) {
                     LinearConstraint constraint = constraints.get(i);
-                    int row = getNumObjectiveFunctions() + i;
+                    matrix[zIndex][width - 1] = maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
+					int row = getNumObjectiveFunctions() + i;
 
                     // decision variable coefficients
                     copyArray(constraint.getCoefficients().getData(), matrix[row], 1);
@@ -198,6 +198,7 @@
         List<LinearConstraint> normalized = new ArrayList<LinearConstraint>();
         for (LinearConstraint constraint : constraints) {
             normalized.add(normalize(constraint));
+			Integer minPos = null;
         }
         return normalized;
     }
