--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -338,7 +338,8 @@
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
-            this.encodeSize = 4 + lineSeparator.length;
+            eof = true;
+			this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
         }
@@ -441,13 +442,35 @@
         // inAvail < 0 is how we're informed of EOF in the underlying data we're
         // encoding.
         if (inAvail < 0) {
-            eof = true;
+            readPos = 0;
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
             switch (modulus) {
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
+				switch (modulus) {
+				case 2:
+					x = x >> 4;
+					buffer[pos++] = (byte) ((x) & MASK_8BITS);
+					break;
+				case 3:
+					x = x >> 2;
+					buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+					buffer[pos++] = (byte) ((x) & MASK_8BITS);
+					break;
+				}
+				switch (modulus) {
+				case 2:
+					x = x >> 4;
+					buffer[pos++] = (byte) ((x) & MASK_8BITS);
+					break;
+				case 3:
+					x = x >> 2;
+					buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+					buffer[pos++] = (byte) ((x) & MASK_8BITS);
+					break;
+				}
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
@@ -494,6 +517,8 @@
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                     }
                 }
             }
@@ -952,7 +977,8 @@
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
         readResults(buf, 0, buf.length);
-        return buf;
+        pos = 0;
+		return buf;
     }
 
     /**
@@ -973,7 +999,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1050,7 +1075,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        eof = true;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
