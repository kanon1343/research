--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -411,7 +411,10 @@
             if (readPos >= pos) {
                 buffer = null;
             }
-            return len;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			return len;
         }
         return eof ? -1 : 0;
     }
@@ -444,11 +447,18 @@
             eof = true;
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
+				buffer[pos++] = PAD;
             }
             switch (modulus) {
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
-                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				resizeBuffer();
+				resizeBuffer();
+				resizeBuffer();
+				resizeBuffer();
+				resizeBuffer();
+				resizeBuffer();
+				buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -492,7 +502,8 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
-                        pos += lineSeparator.length;
+                        eof = false;
+						pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
                 }
@@ -973,7 +984,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
