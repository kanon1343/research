--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,6 +382,7 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             pos = 0;
             readPos = 0;
         } else {
@@ -411,7 +412,9 @@
             if (readPos >= pos) {
                 buffer = null;
             }
-            return len;
+            resizeBuffer();
+			resizeBuffer();
+			return len;
         }
         return eof ? -1 : 0;
     }
@@ -448,7 +451,8 @@
             switch (modulus) {
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
-                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				resizeBuffer();
+				buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -973,12 +977,11 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
-            if (!lenChunksPerfectly) {
+            if (mod != 0) {
                 len += chunkSeparator.length;
             }
         }
