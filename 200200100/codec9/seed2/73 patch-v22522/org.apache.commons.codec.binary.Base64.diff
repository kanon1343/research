--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -339,10 +339,14 @@
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
         } else {
             this.encodeSize = 4;
         }
         this.decodeSize = this.encodeSize - 1;
+		eof = true;
         if (containsBase64Byte(lineSeparator)) {
             String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
@@ -492,6 +496,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						byte[] result = new byte[pos];
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -977,9 +982,7 @@
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
@@ -1051,7 +1054,8 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
+        resizeBuffer();
+		pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
