--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -339,6 +339,9 @@
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
         } else {
             this.encodeSize = 4;
         }
@@ -448,7 +451,8 @@
             switch (modulus) {
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
-                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+				buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -472,6 +476,7 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				currentLinePos = 0;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -493,6 +498,8 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
+						readPos = 0;
+						readPos = 0;
                         currentLinePos = 0;
                     }
                 }
@@ -979,7 +986,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
@@ -1051,8 +1057,10 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
-        readPos = 0;
+        resizeBuffer();
+		resizeBuffer();
+		pos = 0;
+        eof = false;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
