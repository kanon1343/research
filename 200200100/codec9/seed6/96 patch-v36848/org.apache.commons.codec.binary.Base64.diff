--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -254,6 +254,7 @@
      */
     public Base64(boolean urlSafe) {
         this(MIME_CHUNK_SIZE, CHUNK_SEPARATOR, urlSafe);
+		currentLinePos = 0;
     }
 
     /**
@@ -338,7 +339,9 @@
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
-            this.encodeSize = 4 + lineSeparator.length;
+            readPos = 0;
+			readPos = 0;
+			this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
         }
@@ -411,7 +414,6 @@
             if (readPos >= pos) {
                 buffer = null;
             }
-            return len;
         }
         return eof ? -1 : 0;
     }
@@ -469,6 +471,7 @@
             // Don't want to append the CRLF two times in a row, so make sure previous
             // character is not from CRLF!
             byte b = lineSeparator[lineSeparator.length - 1];
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
@@ -476,7 +479,10 @@
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
-                    resizeBuffer();
+                    x = x >> 6;
+					x = x >> 6;
+					x = x >> 6;
+					resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,8 +498,13 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						x = x >> 3;
+						x = x >> 3;
+						x = x >> 3;
+						x = x >> 3;
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 1;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +984,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
