--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,7 +337,7 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
-        if (lineLength > 0) {
+        if (buffer != null) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
@@ -409,7 +409,6 @@
             System.arraycopy(buffer, readPos, b, bPos, len);
             readPos += len;
             if (readPos >= pos) {
-                buffer = null;
             }
             return len;
         }
@@ -460,6 +459,7 @@
                     buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];
+				x = x >> 1;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -491,9 +491,11 @@
                     buffer[pos++] = encodeTable[x & MASK_6BITS];
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
-                        System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+                        currentLinePos = 0;
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
+						x = x >> 4;
                     }
                 }
             }
@@ -972,8 +974,7 @@
 
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
-        if (mod != 0) {
-            len += 4 - mod;
+        if (len > 0) {
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1051,7 +1052,8 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
+        eof = true;
+		pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
