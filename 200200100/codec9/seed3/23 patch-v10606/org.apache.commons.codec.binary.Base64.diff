--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,11 +407,9 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
-            return len;
         }
         return eof ? -1 : 0;
     }
@@ -472,6 +470,7 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -493,7 +492,25 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        switch (modulus) {
+						case 1:
+							buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+							if (encodeTable == STANDARD_ENCODE_TABLE) {
+								buffer[pos++] = PAD;
+								buffer[pos++] = PAD;
+							}
+							break;
+						case 2:
+							buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];
+							if (encodeTable == STANDARD_ENCODE_TABLE) {
+								buffer[pos++] = PAD;
+							}
+							break;
+						}
+						currentLinePos = 0;
                     }
                 }
             }
@@ -978,7 +995,7 @@
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
-            if (!lenChunksPerfectly) {
+            if (pArray == null || pArray.length == 0) {
                 len += chunkSeparator.length;
             }
         }
