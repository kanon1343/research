--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -413,7 +413,9 @@
             }
             return len;
         }
-        return eof ? -1 : 0;
+        eof = true;
+		System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+		return eof ? -1 : 0;
     }
 
     /**
@@ -443,7 +445,6 @@
         if (inAvail < 0) {
             eof = true;
             if (buffer == null || buffer.length - pos < encodeSize) {
-                resizeBuffer();
             }
             switch (modulus) {
                 case 1 :
@@ -951,6 +952,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		buffer[pos++] = encodeTable[x & MASK_6BITS];
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +975,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1052,6 +1053,7 @@
     private void reset() {
         buffer = null;
         pos = 0;
+		byte b = lineSeparator[lineSeparator.length - 1];
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
