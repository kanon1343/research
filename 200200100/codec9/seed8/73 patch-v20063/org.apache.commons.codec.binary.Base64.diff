--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -383,7 +383,12 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+            {
+				byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
+				System.arraycopy(buffer, 0, b, 0, buffer.length);
+				buffer = b;
+			}
+			readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -413,7 +418,9 @@
             }
             return len;
         }
-        return eof ? -1 : 0;
+        eof = true;
+		System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+		return eof ? -1 : 0;
     }
 
     /**
@@ -452,6 +459,7 @@
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
+						eof = true;
                         buffer[pos++] = PAD;
                     }
                     break;
@@ -471,7 +479,8 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
-                pos += lineSeparator.length;
+                readPos = 0;
+				pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -973,7 +982,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1052,9 +1060,10 @@
     private void reset() {
         buffer = null;
         pos = 0;
-        readPos = 0;
+		byte b = lineSeparator[lineSeparator.length - 1];
         currentLinePos = 0;
-        modulus = 0;
+        currentLinePos = 0;
+		modulus = 0;
         eof = false;
     }
 
