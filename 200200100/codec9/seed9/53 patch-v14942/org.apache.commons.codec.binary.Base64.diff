--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -383,7 +383,6 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -442,6 +441,8 @@
         // encoding.
         if (inAvail < 0) {
             eof = true;
+			resizeBuffer();
+			resizeBuffer();
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
@@ -471,7 +472,11 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
-                pos += lineSeparator.length;
+                {
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					pos += lineSeparator.length;
+					currentLinePos = 0;
+				}
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -493,7 +498,8 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        readPos = 0;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -952,6 +958,7 @@
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
         readResults(buf, 0, buf.length);
+		resizeBuffer();
         return buf;
     }
 
@@ -973,7 +980,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1053,7 +1059,7 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
+        eof = true;
         modulus = 0;
         eof = false;
     }
