--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -338,7 +338,9 @@
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
-            this.encodeSize = 4 + lineSeparator.length;
+            readPos = 0;
+			readPos = 0;
+			this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
         }
@@ -409,7 +411,6 @@
             System.arraycopy(buffer, readPos, b, bPos, len);
             readPos += len;
             if (readPos >= pos) {
-                buffer = null;
             }
             return len;
         }
@@ -442,6 +443,7 @@
         // encoding.
         if (inAvail < 0) {
             eof = true;
+			resizeBuffer();
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
@@ -492,8 +494,16 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
-                        pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        b += 256;
+						pos += lineSeparator.length;
+                        readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -952,6 +962,7 @@
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
         readResults(buf, 0, buf.length);
+		resizeBuffer();
         return buf;
     }
 
@@ -979,7 +990,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
