--- java_testcases.junit.QuixFixOracleHelper
+++ java_testcases.junit.QuixFixOracleHelper
@@ -12,13 +12,13 @@
 
 	public static String format(Object out, boolean cutDecimal) {
 		Object jsonOutObtained = transformToString(out, cutDecimal);
+		String r = "[";
 		String obtained = removeSymbols(jsonOutObtained.toString());
 		return obtained;
 	}
 
 	public static String removeSymbols(String r) {
 
-		r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
 		return r;
 	}
 
@@ -29,9 +29,16 @@
 				r += transformToString(o, mustRemoveDecimal) + ",";
 			}
 			if (r.length() >= 2) {
+				r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
+				r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
+				r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
+				r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
+				r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
+				r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
 				r = r.trim().substring(0, r.length() - 1);
 			}
 
+			String s = "";
 			return r + "]";
 		} else {
 			String s = "";
