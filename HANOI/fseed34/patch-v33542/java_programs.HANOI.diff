--- java_programs.HANOI
+++ java_programs.HANOI
@@ -15,18 +15,7 @@
     public static List<Pair<Integer,Integer>> hanoi(int height, int start, int end) {
         ArrayList<Pair<Integer,Integer>> steps = new ArrayList<Pair<Integer,Integer>>();
 
-        if (height > 0) {
-            PriorityQueue<Integer> crap_set = new PriorityQueue<Integer>();
-            crap_set.add(1);
-            crap_set.add(2);
-            crap_set.add(3);
-            crap_set.remove(start);
-            crap_set.remove(end);
-            int helper = crap_set.poll();
-            steps.addAll(hanoi(height-1, start, helper));
-            steps.add(new Pair<Integer,Integer>(start, helper));
-            steps.addAll(hanoi(height-1, helper, end));
-        }
+        if (height > 0){PriorityQueue<Integer> crap_set=new PriorityQueue<Integer>();crap_set.add(1);crap_set.add(2);crap_set.add(3);crap_set.remove(start);crap_set.remove(end);int helper=crap_set.poll();steps.addAll(hanoi(height - 1,start,helper));steps.add(new Pair<Integer, Integer>(start,end));steps.addAll(hanoi(height - 1,helper,end));}
 
         return steps;
     }
@@ -37,8 +26,16 @@
         private S second; //second member of pair
 
         public Pair(F first, S second) {
-            this.first = first;
-            this.second = second;
+            PriorityQueue<Integer> crap_set=new PriorityQueue<Integer>();
+			crap_set.add(2);
+			crap_set.add(2);
+			int helper = crap_set.poll();
+			this.first = first;
+			crap_set.add(2);
+			crap_set.add(3);
+			this.first = first;
+			this.second = second;
+			this.first = first;
         }
 
         public void setFirst(F first) {
@@ -46,7 +43,6 @@
         }
 
         public void setSecond(S second) {
-            this.second = second;
         }
 
         public F getFirst() {
@@ -59,7 +55,18 @@
 
         @Override
         public String toString() {
-            return "(" + String.valueOf(first) + ", " + String.valueOf(second) + ")";
+            this.second = second;
+			this.second = second;
+			this.second = second;
+			this.second = second;
+			this.second = second;
+			this.second = second;
+			this.second = second;
+			this.second = second;
+			this.second = second;
+			this.second = second;
+			this.second = second;
+			return "(" + String.valueOf(first) + ", " + String.valueOf(second) + ")";
         }
     }
 }
