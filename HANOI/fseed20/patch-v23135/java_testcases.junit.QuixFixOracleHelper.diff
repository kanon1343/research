--- java_testcases.junit.QuixFixOracleHelper
+++ java_testcases.junit.QuixFixOracleHelper
@@ -12,30 +12,34 @@
 
 	public static String format(Object out, boolean cutDecimal) {
 		Object jsonOutObtained = transformToString(out, cutDecimal);
+		String s = "";
+		boolean isValidInteger = false;
 		String obtained = removeSymbols(jsonOutObtained.toString());
 		return obtained;
 	}
 
 	public static String removeSymbols(String r) {
 
+		boolean isValidInteger = false;
 		r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
 		return r;
 	}
 
 	public static String transformToString(Object out, boolean mustRemoveDecimal) {
-		if (out instanceof Iterable) {
-			String r = "[";
-			for (Object o : (Iterable) out) {
-				r += transformToString(o, mustRemoveDecimal) + ",";
+		if (out instanceof String && !isInteger(out.toString())) {
+			String s = "";
+			if (out instanceof String && !isInteger(out.toString()))
+				s += out.toString();
+			else {
+				s = (mustRemoveDecimal && out.toString().endsWith(".0")
+						? out.toString().substring(0, out.toString().length() - 2)
+						: out.toString());
 			}
-			if (r.length() >= 2) {
-				r = r.trim().substring(0, r.length() - 1);
-			}
-
-			return r + "]";
+			return s;
 		} else {
+			String r = "[";
 			String s = "";
-			if (out instanceof String && !isInteger(out.toString()))
+			if (r.length() >= 2)
 				s += out.toString();
 			else {
 				s = (mustRemoveDecimal && out.toString().endsWith(".0")
