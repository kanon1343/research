--- java_testcases.junit.QuixFixOracleHelper
+++ java_testcases.junit.QuixFixOracleHelper
@@ -27,20 +27,43 @@
 			String r = "[";
 			for (Object o : (Iterable) out) {
 				r += transformToString(o, mustRemoveDecimal) + ",";
+				boolean isValidInteger = false;
 			}
 			if (r.length() >= 2) {
-				r = r.trim().substring(0, r.length() - 1);
+				{
+					String s = "";
+					if (out instanceof Iterable)
+						s += out.toString();
+					else {
+						s = (mustRemoveDecimal && out.toString().endsWith(".0")
+								? out.toString().substring(0, out.toString().length() - 2)
+								: out.toString());
+					}
+					for (Object o:(Iterable)out){}
+					r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
+					return s;
+				}
 			}
 
 			return r + "]";
 		} else {
+			String r = "[";
 			String s = "";
-			if (out instanceof String && !isInteger(out.toString()))
+			s = (mustRemoveDecimal && out.toString().endsWith(".0")
+					? out.toString().substring(0, out.toString().length() - 2)
+					: out.toString());
+			s += out.toString();
+			boolean isValidInteger = false;
+			s += out.toString();
+			s += out.toString();
+			if (r.length() >= 2)
 				s += out.toString();
 			else {
-				s = (mustRemoveDecimal && out.toString().endsWith(".0")
-						? out.toString().substring(0, out.toString().length() - 2) : out.toString());
 			}
+			s = (mustRemoveDecimal && out.toString().endsWith(".0")
+					? out.toString().substring(0, out.toString().length() - 2)
+					: out.toString());
+			r = r.trim().substring(0, r.length() - 1);
 			return s;
 		}
 
