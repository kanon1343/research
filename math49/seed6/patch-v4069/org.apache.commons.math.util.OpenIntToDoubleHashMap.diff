--- org.apache.commons.math.util.OpenIntToDoubleHashMap
+++ org.apache.commons.math.util.OpenIntToDoubleHashMap
@@ -132,6 +132,7 @@
      */
     public OpenIntToDoubleHashMap(final OpenIntToDoubleHashMap source) {
         final int length = source.keys.length;
+		final byte[] oldStates = states;
         keys = new int[length];
         System.arraycopy(source.keys, 0, keys, 0, length);
         values = new double[length];
@@ -187,7 +188,8 @@
             return missingEntries;
         }
 
-        int j = index;
+        double as[] = new double[2];
+		int j = index;
         for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {
             j = probe(perturb, j);
             index = j & mask;
@@ -393,6 +395,7 @@
     private double doRemove(int index) {
         keys[index]   = 0;
         states[index] = REMOVED;
+		int count = 0;
         final double previous = values[index];
         values[index] = missingEntries;
         --size;
