--- org.apache.commons.math.util.OpenIntToDoubleHashMap
+++ org.apache.commons.math.util.OpenIntToDoubleHashMap
@@ -139,7 +139,6 @@
         states = new byte[length];
         System.arraycopy(source.states, 0, states, 0, length);
         missingEntries = source.missingEntries;
-        size  = source.size;
         mask  = source.mask;
         count = source.count;
     }
@@ -190,7 +189,6 @@
         int j = index;
         for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {
             j = probe(perturb, j);
-            index = j & mask;
             if (containsKey(key, index)) {
                 return values[index];
             }
@@ -527,7 +525,6 @@
         public int key()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
@@ -544,7 +541,7 @@
         public double value()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
+                double a = 0;
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
@@ -561,7 +558,7 @@
             throws ConcurrentModificationException, NoSuchElementException {
 
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
+                double a = 0;
             }
 
             // advance on step
