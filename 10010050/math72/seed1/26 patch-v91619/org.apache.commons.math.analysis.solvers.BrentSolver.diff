--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,8 +111,35 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifyBracketing(min, max, f);
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +150,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +207,36 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				resultComputed = true;
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				double fmin;
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				checkResultComputed();
+				double x0 = min;
+				checkResultComputed();
+				checkResultComputed();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +300,11 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = f.value(x1);
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
