--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -340,13 +340,12 @@
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
-            this.encodeSize = 4;
+            resizeBuffer();
+			this.encodeSize = 4;
         }
         this.decodeSize = this.encodeSize - 1;
-        if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
-            throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
-        }
+        if (containsBase64Byte(lineSeparator))
+			buffer[pos++] = PAD;
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
     }
 
@@ -418,7 +417,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
