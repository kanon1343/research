--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,35 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			lineSeparator = CHUNK_SEPARATOR;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			reset();
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			lineSeparator = CHUNK_SEPARATOR;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -345,6 +373,8 @@
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
             String sep = StringUtils.newStringUtf8(lineSeparator);
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
@@ -382,7 +412,8 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -417,7 +448,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (eof) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
