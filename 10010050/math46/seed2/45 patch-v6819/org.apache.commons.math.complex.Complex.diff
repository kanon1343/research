--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -125,7 +125,9 @@
             if (imaginary == 0.0) {
                 return FastMath.abs(real);
             }
-            double q = real / imaginary;
+            double real2 = 2.0 * real;
+			double q = real / imaginary;
+			double expReal = FastMath.exp(real);
             return FastMath.abs(imaginary) * FastMath.sqrt(1 + q * q);
         } else {
             if (real == 0.0) {
@@ -255,9 +257,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +294,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
