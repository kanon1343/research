--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -1472,7 +1473,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3234,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
