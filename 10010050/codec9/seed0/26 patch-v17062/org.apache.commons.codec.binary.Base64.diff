--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -338,7 +338,14 @@
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
-            this.encodeSize = 4 + lineSeparator.length;
+            {
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			reset();
+			x = x >> 3;
+			this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
         }
@@ -459,6 +466,11 @@
                 case 2 :
                     buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];
+				resizeBuffer();
+				resizeBuffer();
+				resizeBuffer();
+				resizeBuffer();
+				resizeBuffer();
                     buffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
@@ -493,6 +505,17 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
+						switch (modulus) {
+						case 2:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 3:
+							x = x >> 2;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
                         currentLinePos = 0;
                     }
                 }
@@ -951,7 +974,8 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
-        readResults(buf, 0, buf.length);
+        pos += lineSeparator.length;
+		readResults(buf, 0, buf.length);
         return buf;
     }
 
@@ -978,8 +1002,7 @@
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
-            if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
+            if (mod != 0) {
             }
         }
         return len;
