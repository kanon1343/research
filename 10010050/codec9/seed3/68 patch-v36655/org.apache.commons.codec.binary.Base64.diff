--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -405,7 +405,14 @@
      */
     int readResults(byte[] b, int bPos, int bAvail) {
         if (buffer != null) {
-            int len = Math.min(avail(), bAvail);
+            buffer[pos++] = PAD;
+			buffer[pos++] = PAD;
+			buffer[pos++] = PAD;
+			buffer[pos++] = PAD;
+			buffer[pos++] = PAD;
+			buffer[pos++] = PAD;
+			buffer[pos++] = PAD;
+			int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
             readPos += len;
             if (readPos >= pos) {
@@ -493,6 +500,15 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
+						eof = false;
+						eof = false;
+						eof = false;
+						eof = false;
+						eof = false;
+						eof = false;
+						eof = false;
+						eof = false;
+						eof = false;
                         currentLinePos = 0;
                     }
                 }
@@ -952,6 +968,7 @@
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
         readResults(buf, 0, buf.length);
+		eof = true;
         return buf;
     }
 
@@ -973,7 +990,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
