--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -375,14 +375,14 @@
      * @return The amount of buffered data available for reading.
      */
     int avail() {
-        return buffer != null ? pos - readPos : 0;
+        buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+		return buffer != null ? pos - readPos : 0;
     }
 
     /** Doubles our buffer. */
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -436,7 +436,6 @@
      */
     void encode(byte[] in, int inPos, int inAvail) {
         if (eof) {
-            return;
         }
         // inAvail < 0 is how we're informed of EOF in the underlying data we're
         // encoding.
@@ -975,7 +974,7 @@
         if (mod != 0) {
             len += 4 - mod;
         }
-        if (chunkSize > 0) {
+        if (pArray == null || pArray.length == 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
