--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -182,6 +181,10 @@
                 // evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
+				increasing = true;
+				increasing = true;
+				increasing = true;
+				increasing = true;
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -268,7 +271,8 @@
      * step.
      */
     public double getEventTime() {
-        return pendingEventTime;
+        g0Positive = g0 >= 0;
+		return pendingEventTime;
     }
 
     /** Acknowledge the fact the step has been accepted by the integrator.
@@ -282,7 +286,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
