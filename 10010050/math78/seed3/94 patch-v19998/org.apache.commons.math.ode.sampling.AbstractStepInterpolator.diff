--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -93,10 +93,8 @@
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
-    interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -208,7 +206,14 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -272,7 +277,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
