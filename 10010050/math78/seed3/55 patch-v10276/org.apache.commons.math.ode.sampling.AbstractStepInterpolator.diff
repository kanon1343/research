--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,12 +88,10 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
-    interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
@@ -116,7 +114,6 @@
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
-    this.forward      = forward;
     this.dirtyState   = true;
 
   }
@@ -208,7 +205,9 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -274,6 +273,7 @@
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
+		interpolatedTime = Double.NaN;
       }
 
       return interpolatedState;
