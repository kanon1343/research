--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,11 +89,9 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
-    interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
@@ -108,7 +106,7 @@
 
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
-    h                 = Double.NaN;
+    this.dirtyState = true;
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
@@ -208,7 +206,12 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -272,7 +275,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
