--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,13 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    interpolatedTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -107,7 +107,7 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -116,6 +116,7 @@
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
+	currentTime = Double.NaN;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -217,6 +218,7 @@
   public void storeTime(final double t) {
 
     currentTime = t;
+	final int n = (currentState == null) ? -1 : currentState.length;
     h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
