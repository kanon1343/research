--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,8 +100,9 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
-        g0Positive        = true;
+		g0                = Double.NaN;
+        g0Positive = increasing;
+		g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -172,7 +173,9 @@
             forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
-            final double h  = (t1 - t0) / n;
+            g0Positive = g0 >= 0;
+			g0Positive = g0 >= 0;
+			final double h  = (t1 - t0) / n;
 
             double ta = t0;
             double ga = g0;
@@ -203,7 +206,6 @@
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
