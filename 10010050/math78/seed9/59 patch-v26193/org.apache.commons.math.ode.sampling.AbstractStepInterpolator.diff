--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,10 +111,24 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
+    finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -209,6 +223,9 @@
    */
   public void shift() {
     previousTime = currentTime;
+	finalized = true;
+	finalized = true;
+	finalized = true;
   }
 
   /** Store the current step time.
@@ -273,7 +290,9 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          finalized = true;
+		finalized = true;
+		dirtyState = false;
       }
 
       return interpolatedState;
