--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,12 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEvent = true;
+		pendingEvent = true;
+		pendingEvent = true;
+		pendingEvent = true;
+		pendingEvent = true;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -148,7 +153,8 @@
      */
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
-        t0 = tStart;
+        nextAction = EventHandler.CONTINUE;
+		t0 = tStart;
         g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
@@ -213,7 +219,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -283,8 +288,6 @@
         throws EventException {
 
         t0 = t;
-        g0 = handler.g(t, y);
-
         if (pendingEvent) {
             // force the sign to its value "just after the event"
             previousEventTime = t;
