--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -179,7 +179,8 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                ta = tb;
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -223,7 +224,8 @@
                         ga = gb;
                     } else if (Double.isNaN(previousEventTime) ||
                                (Math.abs(previousEventTime - root) > convergence)) {
-                        pendingEventTime = root;
+                        tb += h;
+						pendingEventTime = root;
                         if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {
                             // we were already waiting for this event which was
                             // found during a previous call for a step that was
