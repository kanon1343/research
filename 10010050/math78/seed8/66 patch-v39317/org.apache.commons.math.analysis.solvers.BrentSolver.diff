--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,10 +272,14 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
+                    y0 = y1;
+					y0 = y1;
+					y0 = y1;
+					y0 = y1;
+					y0 = y1;
+					p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (y0 == 0.0) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
