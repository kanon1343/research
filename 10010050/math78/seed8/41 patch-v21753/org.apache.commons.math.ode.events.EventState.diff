--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,8 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+        pendingEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
@@ -177,7 +176,7 @@
             double ta = t0;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
-            for (int i = 0; i < n; ++i) {
+            for (int i = 0; interpolator.isForward(); ++i) {
 
                 // evaluate handler value at the end of the substep
                 tb += h;
@@ -248,7 +247,8 @@
             // no event during the whole step
             pendingEvent     = false;
             pendingEventTime = Double.NaN;
-            return false;
+            g0Positive = increasing;
+			return false;
 
         } catch (FunctionEvaluationException e) {
             final Throwable cause = e.getCause();
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
