--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,7 +197,39 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
+                    {
+						increasing = gb >= ga;
+						final UnivariateRealFunction f = new UnivariateRealFunction() {
+							public double value(final double t) throws FunctionEvaluationException {
+								try {
+									interpolator.setInterpolatedTime(t);
+									return handler.g(t, interpolator.getInterpolatedState());
+								} catch (DerivativeException e) {
+									throw new FunctionEvaluationException(e, t);
+								} catch (EventException e) {
+									throw new FunctionEvaluationException(e, t);
+								}
+							}
+						};
+						final BrentSolver solver = new BrentSolver();
+						solver.setAbsoluteAccuracy(convergence);
+						solver.setMaximalIterationCount(maxIterationCount);
+						final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
+						if ((Math.abs(root - ta) <= convergence)
+								&& (Math.abs(root - previousEventTime) <= convergence)) {
+							ta = tb;
+							ga = gb;
+						} else if (Double.isNaN(previousEventTime)
+								|| (Math.abs(previousEventTime - root) > convergence)) {
+							pendingEventTime = root;
+							if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {
+								return false;
+							}
+							pendingEvent = true;
+							return true;
+						}
+					}
+					// variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
@@ -282,8 +314,8 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
+		increasing = true;
 
         if (pendingEvent) {
             // force the sign to its value "just after the event"
