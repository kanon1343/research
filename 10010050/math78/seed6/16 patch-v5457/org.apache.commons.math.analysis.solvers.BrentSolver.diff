--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -156,7 +156,7 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
+        this.resultComputed = true;
 
         double ret = Double.NaN;
 
@@ -262,6 +262,7 @@
                     // Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
+					functionValueAccuracy = defaultFunctionValueAccuracy;
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
@@ -288,6 +289,7 @@
             }
             // Save old X1, Y1
             x0 = x1;
+			y1 = f.value(x1);
             y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
