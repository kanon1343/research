--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -177,11 +177,11 @@
             double ta = t0;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
+			pendingEvent = false;
             for (int i = 0; i < n; ++i) {
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -282,12 +282,12 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
             // force the sign to its value "just after the event"
             previousEventTime = t;
+			handler.resetState(t, y);
             g0Positive        = increasing;
             nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
         } else {
