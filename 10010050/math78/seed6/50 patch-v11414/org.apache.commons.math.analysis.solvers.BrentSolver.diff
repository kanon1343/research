--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -239,7 +239,8 @@
                 setResult(x1, i);
                 return result;
             }
-            double dx = x2 - x1;
+            checkResultComputed();
+			double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
             if (Math.abs(dx) <= tolerance) {
@@ -262,6 +263,7 @@
                     // Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
+					functionValueAccuracy = defaultFunctionValueAccuracy;
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
