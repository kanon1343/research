--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,6 +102,7 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
+		nextAction = EventHandler.CONTINUE;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -175,8 +176,10 @@
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
-            double ga = g0;
+            increasing = true;
+			double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
+			pendingEvent = false;
             for (int i = 0; i < n; ++i) {
 
                 // evaluate handler value at the end of the substep
@@ -213,7 +216,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
