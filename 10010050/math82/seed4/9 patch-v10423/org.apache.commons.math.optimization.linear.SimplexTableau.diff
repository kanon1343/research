--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -128,12 +128,14 @@
         numArtificialVariables + getNumObjectiveFunctions() + 1; // + 1 is for RHS
         int height = constraints.size() + getNumObjectiveFunctions();
         double[][] matrix = new double[height][width];
+		double minRatio = Double.MAX_VALUE;
 
         // initialize the objective function rows
         if (getNumObjectiveFunctions() == 2) {
             matrix[0][0] = -1;
         }
-        int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
+        int count = 0;
+		int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
         matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
@@ -187,7 +189,15 @@
      * @return number of variables
      */
     public int getNumVariables() {
-        return f.getCoefficients().getDimension();
+        this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		return f.getCoefficients().getDimension();
     }
 
     /**
