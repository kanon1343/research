--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,27 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            resultComputed = true;
+			clearResult();
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
             return result;
         }
 
@@ -124,7 +144,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +257,7 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				clearResult();
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -281,6 +301,7 @@
                     p1 = -p1;
                 } else {
                     p = -p;
+					double r2 = y1 / y2;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
