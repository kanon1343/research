--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,10 +110,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +120,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +162,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		int iterationCount = 0;
 
         double ret = Double.NaN;
 
@@ -245,6 +241,7 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				double tolerance = Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
                 return result;
             }
             double dx = x2 - x1;
