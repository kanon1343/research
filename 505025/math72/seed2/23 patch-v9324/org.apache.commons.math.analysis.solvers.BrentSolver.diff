--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,7 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
+        this.resultComputed = true;
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -109,10 +109,10 @@
             return result;
         }
 
-        // return the first endpoint if it is good enough
+        int iterationCount = 0;
+		// return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,8 +123,9 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		clearResult();
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.defaultFunctionValueAccuracy = 1.0e-15;
             return result;
         }
 
@@ -167,6 +168,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.iterationCount = iterationCount;
 
         double ret = Double.NaN;
 
@@ -181,8 +183,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -232,7 +234,9 @@
         int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
+                i++;
+				i++;
+				// use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
