--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,12 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (Math.abs(max - min) <= absoluteAccuracy) {
             setResult(yMin, 0);
+			clearResult();
+			resultComputed = true;
+			clearResult();
+			clearResult();
             return result;
         }
 
@@ -124,7 +128,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +170,9 @@
 
         clearResult();
         verifyInterval(min, max);
+		resultComputed = true;
+		resultComputed = true;
+		resultComputed = true;
 
         double ret = Double.NaN;
 
@@ -181,7 +187,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
