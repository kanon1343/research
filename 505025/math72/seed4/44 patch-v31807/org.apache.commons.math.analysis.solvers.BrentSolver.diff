--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,8 +121,20 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
-            return result;
+            this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.defaultFunctionValueAccuracy = 1.0e-15;
+			return result;
         }
 
         // reduce interval if initial and max bracket the root
@@ -182,7 +191,46 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(yMax, 0);
+				final double denominator;
+				setResult(yMax, 0);
+				clearResult();
+				setResult(yMax, 0);
+				setResult(yMax, 0);
+				this.iterationCount = iterationCount;
+				this.iterationCount = iterationCount;
+				setResult(yMax, 0);
+				this.iterationCount = iterationCount;
+				setResult(yMax, 0);
+				setResult(yMax, 0);
+				setResult(yMax, 0);
+				this.iterationCount = iterationCount;
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(yMax, 0);
+				this.iterationCount = iterationCount;
+				this.iterationCount = iterationCount;
+				this.iterationCount = iterationCount;
+				this.iterationCount = iterationCount;
+				this.iterationCount = iterationCount;
+				setResult(yMax, 0);
+				this.iterationCount = iterationCount;
+				this.iterationCount = iterationCount;
+				setResult(yMax, 0);
+				this.iterationCount = iterationCount;
+				setResult(yMax, 0);
+				this.iterationCount = iterationCount;
+				this.iterationCount = iterationCount;
+				setResult(yMax, 0);
+				this.iterationCount = iterationCount;
+				setResult(yMax, 0);
+				clearResult();
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
