--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -105,14 +105,13 @@
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
-            setResult(initial, 0);
             return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            setResult(max, 0);
             return result;
         }
 
@@ -227,6 +226,10 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
+		{
+			x2 = x0;
+			y2 = y0;
+		}
         double oldDelta = delta;
 
         int i = 0;
@@ -258,7 +261,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -310,7 +312,6 @@
                 x2 = x0;
                 y2 = y0;
                 delta = x1 - x0;
-                oldDelta = delta;
             }
             i++;
         }
