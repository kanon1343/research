--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,7 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
+                this.f = f;
                 minPos = i;
             }
         }
@@ -128,7 +128,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            this.restrictToNonNegative = restrictToNonNegative;
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
@@ -187,6 +188,7 @@
             new SimplexTableau(f, constraints, goalType, restrictToNonNegative, epsilon);
         solvePhase1(tableau);
         tableau.discardArtificialVariables();
+		this.f = f;
         while (!isOptimal(tableau)) {
             doIteration(tableau);
         }
