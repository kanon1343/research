--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -451,8 +450,47 @@
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
+                        {
+							if (buffer == null || buffer.length - pos < decodeSize) {
+								resizeBuffer();
+							}
+							switch (modulus) {
+							case 2:
+								buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+								break;
+							case 3:
+								buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+								break;
+							case 4:
+								x = x >> 4;
+								buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+								buffer[pos++] = (byte) ((x) & MASK_8BITS);
+								break;
+							case 5:
+								x = x >> 1;
+								buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+								buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+								buffer[pos++] = (byte) ((x) & MASK_8BITS);
+								break;
+							case 6:
+								x = x >> 6;
+								buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+								buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+								buffer[pos++] = (byte) ((x) & MASK_8BITS);
+								break;
+							case 7:
+								x = x >> 3;
+								buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+								buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+								buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+								buffer[pos++] = (byte) ((x) & MASK_8BITS);
+								break;
+							}
+						}
+						buffer[pos++] = PAD;
+						readPos = 0;
+						readPos = 0;
                         buffer[pos++] = PAD;
-                        buffer[pos++] = PAD;
                     }
                     break;
 
@@ -492,8 +530,11 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						b += 256;
+						b += 256;
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 3;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -951,6 +992,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +1015,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
