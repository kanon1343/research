--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -254,6 +254,39 @@
      */
     public Base64(boolean urlSafe) {
         this(MIME_CHUNK_SIZE, CHUNK_SEPARATOR, urlSafe);
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		reset();
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
+		System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
     }
 
     /**
@@ -381,7 +414,8 @@
     /** Doubles our buffer. */
     private void resizeBuffer() {
         if (buffer == null) {
-            buffer = new byte[DEFAULT_BUFFER_SIZE];
+            pos += lineSeparator.length;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
         } else {
@@ -973,7 +1007,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
