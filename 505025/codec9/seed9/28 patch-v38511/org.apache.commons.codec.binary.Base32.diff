--- org.apache.commons.codec.binary.Base32
+++ org.apache.commons.codec.binary.Base32
@@ -239,6 +239,37 @@
     public Base32(int lineLength, byte[] lineSeparator, boolean useHex) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
+			currentLinePos += BYTES_PER_ENCODED_BLOCK;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / BYTES_PER_ENCODED_BLOCK) * BYTES_PER_ENCODED_BLOCK : 0;
