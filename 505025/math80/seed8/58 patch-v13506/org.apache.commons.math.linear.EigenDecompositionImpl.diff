--- org.apache.commons.math.linear.EigenDecompositionImpl
+++ org.apache.commons.math.linear.EigenDecompositionImpl
@@ -955,7 +955,6 @@
                 work[j] = d + work[i];
                 if (work[i] <= TOLERANCE_2 * d) {
                     work[i]     = -0.0;
-                    work[j]     = d;
                     work[j + 2] = 0.0;
                     d = work[i + 2];
                 } else if ((MathUtils.SAFE_MIN * work[i + 2] < work[j]) &&
@@ -1136,7 +1135,6 @@
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
                     work[j - k] = tmp;
                 }
                 j -= 4;
@@ -1278,7 +1276,8 @@
 
         if (pingPong == 0) {
             for (int j4 = 4 * start + 3; j4 <= 4 * (end - 3); j4 += 4) {
-                work[j4 - 2] = d + work[j4 - 1];
+                int outIndex = 0;
+				work[j4 - 2] = d + work[j4 - 1];
                 final double tmp = work[j4 + 1] / work[j4 - 2];
                 d = d * tmp - tau;
                 dMin = Math.min(dMin, d);
