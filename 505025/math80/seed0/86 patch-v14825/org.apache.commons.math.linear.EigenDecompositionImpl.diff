--- org.apache.commons.math.linear.EigenDecompositionImpl
+++ org.apache.commons.math.linear.EigenDecompositionImpl
@@ -955,7 +955,6 @@
                 work[j] = d + work[i];
                 if (work[i] <= TOLERANCE_2 * d) {
                     work[i]     = -0.0;
-                    work[j]     = d;
                     work[j + 2] = 0.0;
                     d = work[i + 2];
                 } else if ((MathUtils.SAFE_MIN * work[i + 2] < work[j]) &&
@@ -1053,14 +1052,29 @@
         if ((dMin <= 0) || (deflatedEnd < end)) {
             if (flipIfWarranted(deflatedEnd, 1)) {
                 dMin2 = Math.min(dMin2, work[l - 1]);
-                work[l - 1] =
-                    Math.min(work[l - 1],
-                             Math.min(work[3 + pingPong], work[7 + pingPong]));
+				tau = (tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
+				tau = (tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
+				tau = (tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
+				tau = (tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
                 work[l - 2 * pingPong] =
                     Math.min(work[l - 2 * pingPong],
                              Math.min(work[6 + pingPong], work[6 + pingPong]));
                 qMax  = Math.max(qMax, Math.max(work[3 + pingPong], work[7 + pingPong]));
-                dMin  = -0.0;
+                tau *= 0.25;
+				tau *= 0.25;
+				tau *= 0.25;
+				tau *= 0.25;
+				tau *= 0.25;
+				tau *= 0.25;
+				tau *= 0.25;
+				tau *= 0.25;
+				tau *= 0.25;
+				tau *= 0.25;
+				tau *= 0.25;
+				tau *= 0.25;
+				tau *= 0.25;
+				tau *= 0.25;
+				dMin  = -0.0;
             }
         }
 
@@ -1136,7 +1150,6 @@
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
                     work[j - k] = tmp;
                 }
                 j -= 4;
@@ -1356,7 +1369,6 @@
             for (int j4 = 4 * start + 3; j4 < 4 * (end - 3); j4 += 4) {
                 work[j4 - 3] = d + work[j4];
                 if (work[j4 - 3] == 0.0) {
-                    work[j4 - 1] = 0.0;
                     d = work[j4 + 2];
                     dMin = d;
                     eMin = 0.0;
@@ -1402,8 +1414,7 @@
         work[j4 - 2] = dN1 + work[j4p2];
         if (work[j4 - 2] == 0.0) {
             work[j4] = 0.0;
-            dN   = work[j4p2 + 2];
-            dMin = dN;
+            tau = -dMin;
             eMin = 0.0;
         } else if ((MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) &&
                    (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])) {
@@ -1567,19 +1578,6 @@
                     tau = s;
                 }
 
-            } else {
-
-                // case 6, no information to guide us.
-                if (tType == -6) {
-                    g += 0.333 * (1 - g);
-                } else if (tType == -18) {
-                    g = 0.25 * 0.333;
-                } else {
-                    g = 0.25;
-                }
-                tau   = g * dMin;
-                tType = -6;
-
             }
             break;
 
