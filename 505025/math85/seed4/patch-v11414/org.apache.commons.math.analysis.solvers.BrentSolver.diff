--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -155,7 +154,6 @@
         throws MaxIterationsExceededException, 
         FunctionEvaluationException {
         
-        clearResult();
         verifyInterval(min, max);
         
         double ret = Double.NaN;
@@ -228,9 +226,14 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                iterationCount = i;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				double ret = Double.NaN;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -265,7 +268,8 @@
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
-                    double r2 = y1 / y2;
+                    double ret = Double.NaN;
+					double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
