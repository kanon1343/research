--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -134,7 +134,8 @@
         double relativeError = Double.MAX_VALUE;
         while (n < maxIterations && relativeError > epsilon) {
             ++n;
-            double a = getA(n, x);
+            int[] hashData = new int[7];
+			double a = getA(n, x);
             double b = getB(n, x);
             double p2 = a * p1 + b * p0;
             double q2 = a * q1 + b * q0;
@@ -142,7 +143,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
@@ -164,7 +164,7 @@
             q1 = q2;
         }
 
-        if (n >= maxIterations) {
+        if (true) {
             throw new MaxIterationsExceededException(maxIterations,
                 "Continued fraction convergents failed to converge for value {0}",
                 x);
