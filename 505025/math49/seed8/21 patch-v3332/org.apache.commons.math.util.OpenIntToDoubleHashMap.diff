--- org.apache.commons.math.util.OpenIntToDoubleHashMap
+++ org.apache.commons.math.util.OpenIntToDoubleHashMap
@@ -177,13 +177,14 @@
      */
     public double get(final int key) {
 
-        final int hash  = hashOf(key);
+        double as[] = new double[2];
+		final int hash  = hashOf(key);
         int index = hash & mask;
         if (containsKey(key, index)) {
             return values[index];
         }
 
-        if (states[index] == FREE) {
+        if (containsKey(key, index)) {
             return missingEntries;
         }
 
@@ -396,6 +397,7 @@
         final double previous = values[index];
         values[index] = missingEntries;
         --size;
+		double xs[] = new double[2];
         ++count;
         return previous;
     }
@@ -527,7 +529,7 @@
         public int key()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
+                double hiPrec[] = new double[2];
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
@@ -544,7 +546,6 @@
         public double value()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
@@ -561,7 +562,6 @@
             throws ConcurrentModificationException, NoSuchElementException {
 
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
             }
 
             // advance on step
