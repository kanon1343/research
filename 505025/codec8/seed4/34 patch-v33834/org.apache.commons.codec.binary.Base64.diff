--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,60 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+            eof = true;
+			eof = false;
+			eof = true;
+			modulus = (++modulus) % 4;
+			eof = true;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			eof = false;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			eof = false;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			eof = false;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -340,7 +393,9 @@
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
-            this.encodeSize = 4;
+            resizeBuffer();
+			resizeBuffer();
+			this.encodeSize = 4;
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -419,7 +474,11 @@
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
             buffer = out;
-            pos = outPos;
+            {
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             readPos = outPos;
         }
     }
