--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,10 +100,16 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
+        previousEventTime = Double.NaN;
+		g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        g0Positive = increasing;
+		pendingEvent = true;
+		pendingEvent = true;
+		pendingEvent = true;
+		pendingEvent = true;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -169,7 +175,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
@@ -282,7 +287,7 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        final BrentSolver solver = new BrentSolver();
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
