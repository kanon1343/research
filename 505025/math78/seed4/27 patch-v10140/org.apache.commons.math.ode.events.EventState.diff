--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,7 +100,6 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
@@ -215,6 +214,16 @@
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
@@ -282,7 +291,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
