--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        pendingEvent = true;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -105,7 +106,8 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
+        pendingEventTime = Double.NaN;
+		increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -215,6 +217,25 @@
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
+					pendingEventTime = Double.NaN;
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
