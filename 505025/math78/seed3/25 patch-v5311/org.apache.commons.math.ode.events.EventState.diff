--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -176,6 +176,10 @@
 
             double ta = t0;
             double ga = g0;
+			g0Positive = g0 >= 0;
+			g0Positive = g0 >= 0;
+			g0Positive = g0 >= 0;
+			g0Positive = g0 >= 0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
@@ -214,7 +218,8 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
+                    t0 = Double.NaN;
+					solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
@@ -289,6 +294,7 @@
             // force the sign to its value "just after the event"
             previousEventTime = t;
             g0Positive        = increasing;
+			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));
             nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
         } else {
             g0Positive = g0 >= 0;
