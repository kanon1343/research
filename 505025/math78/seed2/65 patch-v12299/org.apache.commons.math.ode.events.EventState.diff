--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,8 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
+		final BrentSolver solver = new BrentSolver();
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
@@ -103,7 +108,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,6 +216,7 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
@@ -282,7 +287,8 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
