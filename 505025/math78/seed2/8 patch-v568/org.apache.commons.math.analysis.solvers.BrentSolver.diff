--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -163,7 +163,8 @@
         double yMin = f.value(min);
         double yMax = f.value(max);
 
-        // Verify bracketing
+        this.resultComputed = false;
+		// Verify bracketing
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
@@ -230,7 +231,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -250,7 +252,8 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
+                i++;
+				oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
