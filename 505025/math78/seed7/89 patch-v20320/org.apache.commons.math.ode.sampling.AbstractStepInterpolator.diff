--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,7 +95,16 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
-    this.forward            = true;
+    interpolatedTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	this.forward            = true;
     this.dirtyState         = true;
   }
 
@@ -243,7 +252,11 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** {@inheritDoc} */
@@ -418,7 +431,20 @@
     currentTime   = in.readDouble();
     h             = in.readDouble();
     forward       = in.readBoolean();
-    dirtyState    = true;
+    this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	dirtyState    = true;
 
     if (dimension < 0) {
         currentState = null;
