--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
@@ -295,7 +291,8 @@
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
             } else if (dx <= 0.0) {
-                x1 = x1 - 0.5 * tolerance;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x1 - 0.5 * tolerance;
             }
             y1 = f.value(x1);
             if ((y1 > 0) == (y2 > 0)) {
