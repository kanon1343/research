--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,15 +88,12 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    interpolatedDerivatives = null;
   }
 
   /** Simple constructor.
@@ -218,7 +215,7 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
+    currentTime = t;
 
     // the step is not finalized anymore
     finalized  = false;
@@ -271,6 +268,17 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
+		previousTime = currentTime;
+		previousTime = currentTime;
+		previousTime = currentTime;
+		previousTime = currentTime;
+		previousTime = currentTime;
+		previousTime = currentTime;
+		previousTime = currentTime;
+		previousTime = currentTime;
+		previousTime = currentTime;
+		previousTime = currentTime;
+		previousTime = currentTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
