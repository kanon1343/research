--- java_testcases.junit.QuixFixOracleHelper
+++ java_testcases.junit.QuixFixOracleHelper
@@ -29,7 +29,12 @@
 				r += transformToString(o, mustRemoveDecimal) + ",";
 			}
 			if (r.length() >= 2) {
+				r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
+				r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
+				r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
+				r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
 				r = r.trim().substring(0, r.length() - 1);
+				r = r.replaceAll("\\(", "[").replaceAll("\\)", "]").replace(" ", "").replaceAll("\"", "");
 			}
 
 			return r + "]";
@@ -38,9 +43,19 @@
 			if (out instanceof String && !isInteger(out.toString()))
 				s += out.toString();
 			else {
-				s = (mustRemoveDecimal && out.toString().endsWith(".0")
-						? out.toString().substring(0, out.toString().length() - 2) : out.toString());
 			}
+			s = (mustRemoveDecimal && out.toString().endsWith(".0")
+					? out.toString().substring(0, out.toString().length() - 2)
+					: out.toString());
+			s = (mustRemoveDecimal && out.toString().endsWith(".0")
+					? out.toString().substring(0, out.toString().length() - 2)
+					: out.toString());
+			s = (mustRemoveDecimal && out.toString().endsWith(".0")
+					? out.toString().substring(0, out.toString().length() - 2)
+					: out.toString());
+			s = (mustRemoveDecimal && out.toString().endsWith(".0")
+					? out.toString().substring(0, out.toString().length() - 2)
+					: out.toString());
 			return s;
 		}
 
