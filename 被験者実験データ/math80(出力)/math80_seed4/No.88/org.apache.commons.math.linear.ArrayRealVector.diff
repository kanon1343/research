--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +279,6 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
@@ -793,7 +791,6 @@
     /** {@inheritDoc} */
     public RealVector ebeMultiply(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] * v[i];
@@ -830,7 +827,6 @@
     /** {@inheritDoc} */
     public RealVector ebeDivide(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
                 out[i] = data[i] / v[i];
@@ -881,10 +877,8 @@
     /** {@inheritDoc} */
     public double dotProduct(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double dot = 0;
         for (int i = 0; i < data.length; i++) {
-            dot += data[i] * v[i];
         }
         return dot;
     }
@@ -904,7 +898,6 @@
     public double getNorm() {
         double sum = 0;
         for (double a : data) {
-            sum += a * a;
         }
         return Math.sqrt(sum);
     }
@@ -946,7 +939,6 @@
     /** {@inheritDoc} */
     public double getDistance(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double sum = 0;
         for (int i = 0; i < data.length; ++i) {
             final double delta = data[i] - v[i];
@@ -992,7 +984,6 @@
     /** {@inheritDoc} */
     public double getL1Distance(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double sum = 0;
         for (int i = 0; i < data.length; ++i) {
             final double delta = data[i] - v[i];
@@ -1038,7 +1029,6 @@
     /** {@inheritDoc} */
     public double getLInfDistance(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double max = 0;
         for (int i = 0; i < data.length; ++i) {
             final double delta = data[i] - v[i];
@@ -1136,7 +1126,6 @@
     /** {@inheritDoc} */
     public RealMatrix outerProduct(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         final int m = data.length;
         final RealMatrix out = MatrixUtils.createRealMatrix(m, m);
         for (int i = 0; i < data.length; i++) {
