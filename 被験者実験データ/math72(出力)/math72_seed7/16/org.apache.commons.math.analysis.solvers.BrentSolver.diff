--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,65 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			resultComputed = true;
+			clearResult();
+			resultComputed = true;
+			resultComputed = true;
+			clearResult();
+			resultComputed = true;
+			resultComputed = true;
+			clearResult();
+			resultComputed = true;
+			clearResult();
+			clearResult();
+			clearResult();
+			resultComputed = true;
+			resultComputed = true;
+			clearResult();
+			resultComputed = true;
+			resultComputed = true;
+			clearResult();
+			resultComputed = true;
+			clearResult();
+			clearResult();
+			resultComputed = true;
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			resultComputed = true;
+			clearResult();
+			clearResult();
+			clearResult();
+			resultComputed = true;
+			resultComputed = true;
+			clearResult();
+			clearResult();
+			clearResult();
+			this.resultComputed = true;
+			resultComputed = true;
+			clearResult();
+			resultComputed = true;
+			clearResult();
+			clearResult();
+			resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			clearResult();
+			clearResult();
+			resultComputed = true;
             return result;
         }
 
@@ -124,7 +182,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -232,9 +289,80 @@
         int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
+                y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				// use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
