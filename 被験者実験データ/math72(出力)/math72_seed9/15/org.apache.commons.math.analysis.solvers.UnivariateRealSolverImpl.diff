--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -72,11 +72,26 @@
                                        final int defaultMaximalIterationCount,
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
         if (f == null) {
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        clearResult();
+		this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -163,7 +178,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
