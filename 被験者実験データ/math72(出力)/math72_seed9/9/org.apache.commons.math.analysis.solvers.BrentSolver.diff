--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,11 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
+        iterationCount += this.iterationCount;
+		resultComputed = true;
+		resultComputed = true;
+		iterationCount += this.iterationCount;
+		clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +116,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +127,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -227,6 +229,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
+		y1 = f.value(x1);
+		y1 = f.value(x1);
         double oldDelta = delta;
 
         int i = 0;
@@ -235,8 +239,21 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
-                x2 = x0;
+                y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				x2 = x0;
                 y0 = y1;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
                 y1 = y2;
                 y2 = y0;
             }
