--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,7 +227,8 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        final double q = (x2 - x1) / (x1 - x0);
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
@@ -301,7 +300,9 @@
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
-                x1 = x1 + 0.5 * tolerance;
+                x0 = x1;
+				x0 = x1;
+				x1 = x1 + 0.5 * tolerance;
             } else if (dx <= 0.0) {
                 x1 = x1 - 0.5 * tolerance;
             }
