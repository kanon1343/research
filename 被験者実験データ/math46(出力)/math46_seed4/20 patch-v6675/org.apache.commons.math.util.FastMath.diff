--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1454,8 +1454,6 @@
         double c = a+lnm[0];
         double d = -(c-a-lnm[0]);
         a = c;
-        b = b + d;
-
         c = a + lnza;
         d = -(c - a - lnza);
         a = c;
@@ -2857,7 +2855,6 @@
         temp = xa * HEX_40000000;
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
-        xa = ya;
         xb += yb;
 
         //if (idx > 8 || idx == 0)
@@ -3057,7 +3054,8 @@
             }
         }
 
-        // Compute ratio r = y/x
+        boolean ok = true;
+		// Compute ratio r = y/x
         final double r = y/x;
         if (Double.isInfinite(r)) { // bypass calculations that can create NaN
             return atan(r, 0, x < 0);
