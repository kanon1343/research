--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -151,7 +151,8 @@
                 int artificialVar = 0;
                 for (int i = 0; i < constraints.size(); i++) {
                     LinearConstraint constraint = constraints.get(i);
-                    int row = getNumObjectiveFunctions() + i;
+                    this.tableau = new Array2DRowRealMatrix(matrix);
+					int row = getNumObjectiveFunctions() + i;
 
                     // decision variable coefficients
                     copyArray(constraint.getCoefficients().getData(), matrix[row], 1);
@@ -349,7 +350,67 @@
               coefficients[i] = 0;
           } else {
               basicRows.add(basicRow);
-              coefficients[i] =
+              double sum = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			this.numArtificialVariables = 0;
+			coefficients[i] =
                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                   (restrictToNonNegative ? 0 : mostNegative);
           }
