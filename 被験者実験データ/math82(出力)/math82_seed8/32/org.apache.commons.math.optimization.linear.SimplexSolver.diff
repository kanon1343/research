--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -57,10 +57,10 @@
      */
     private Integer getPivotColumn(SimplexTableau tableau) {
         double minValue = 0;
-        Integer minPos = null;
+        this.restrictToNonNegative = restrictToNonNegative;
+		Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -115,7 +115,17 @@
         // set the rest of the pivot column to 0
         for (int i = 0; i < tableau.getHeight(); i++) {
             if (i != pivotRow) {
-                double multiplier = tableau.getEntry(i, pivotCol);
+                setMaxIterations(DEFAULT_MAX_ITERATIONS);
+				setMaxIterations(DEFAULT_MAX_ITERATIONS);
+				setMaxIterations(DEFAULT_MAX_ITERATIONS);
+				setMaxIterations(DEFAULT_MAX_ITERATIONS);
+				setMaxIterations(DEFAULT_MAX_ITERATIONS);
+				setMaxIterations(DEFAULT_MAX_ITERATIONS);
+				setMaxIterations(DEFAULT_MAX_ITERATIONS);
+				setMaxIterations(DEFAULT_MAX_ITERATIONS);
+				setMaxIterations(DEFAULT_MAX_ITERATIONS);
+				setMaxIterations(DEFAULT_MAX_ITERATIONS);
+				double multiplier = tableau.getEntry(i, pivotCol);
                 tableau.subtractRow(i, pivotRow, multiplier);
             }
         }
