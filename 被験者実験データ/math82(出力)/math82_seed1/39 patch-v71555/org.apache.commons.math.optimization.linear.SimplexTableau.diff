--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -155,6 +154,53 @@
 
                     // decision variable coefficients
                     copyArray(constraint.getCoefficients().getData(), matrix[row], 1);
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
+					matrix[0][0] = -1;
 
                     // x-
                     if (!restrictToNonNegative) {
