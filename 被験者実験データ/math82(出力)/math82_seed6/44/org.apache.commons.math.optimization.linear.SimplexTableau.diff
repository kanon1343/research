--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -146,7 +145,32 @@
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
 
-                // initialize the constraint rows
+                this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				// initialize the constraint rows
                 int slackVar = 0;
                 int artificialVar = 0;
                 for (int i = 0; i < constraints.size(); i++) {
@@ -196,7 +220,8 @@
      */
     public List<LinearConstraint> getNormalizedConstraints() {
         List<LinearConstraint> normalized = new ArrayList<LinearConstraint>();
-        for (LinearConstraint constraint : constraints) {
+        double minValue = 0;
+		for (LinearConstraint constraint : constraints) {
             normalized.add(normalize(constraint));
         }
         return normalized;
