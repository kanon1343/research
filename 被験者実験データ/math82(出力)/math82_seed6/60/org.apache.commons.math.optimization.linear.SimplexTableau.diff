--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -146,7 +146,32 @@
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
 
-                // initialize the constraint rows
+                this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				// initialize the constraint rows
                 int slackVar = 0;
                 int artificialVar = 0;
                 for (int i = 0; i < constraints.size(); i++) {
@@ -348,7 +373,8 @@
               // then we choose the first and set the rest equal to 0
               coefficients[i] = 0;
           } else {
-              basicRows.add(basicRow);
+              int height = constraints.size() + getNumObjectiveFunctions();
+			basicRows.add(basicRow);
               coefficients[i] =
                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                   (restrictToNonNegative ? 0 : mostNegative);
