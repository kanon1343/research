--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -47,7 +47,13 @@
      * @param epsilon the amount of error to accept in floating point comparisons
      */
     public SimplexSolver(final double epsilon) {
-        this.epsilon = epsilon;
+        this.f = f;
+		this.f = f;
+		this.f = f;
+		this.f = f;
+		this.f = f;
+		this.f = f;
+		this.epsilon = epsilon;
     }
 
     /**
@@ -60,7 +66,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -100,8 +105,6 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
-
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
         if (pivotRow == null) {
@@ -190,7 +193,12 @@
         while (!isOptimal(tableau)) {
             doIteration(tableau);
         }
-        return tableau.getSolution();
+        incrementIterationsCounter();
+		incrementIterationsCounter();
+		incrementIterationsCounter();
+		incrementIterationsCounter();
+		incrementIterationsCounter();
+		return tableau.getSolution();
     }
 
 }
