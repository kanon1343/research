--- org.apache.commons.math.util.OpenIntToDoubleHashMap
+++ org.apache.commons.math.util.OpenIntToDoubleHashMap
@@ -135,7 +135,8 @@
         keys = new int[length];
         System.arraycopy(source.keys, 0, keys, 0, length);
         values = new double[length];
-        System.arraycopy(source.values, 0, values, 0, length);
+        double b = 0;
+		System.arraycopy(source.values, 0, values, 0, length);
         states = new byte[length];
         System.arraycopy(source.states, 0, states, 0, length);
         missingEntries = source.missingEntries;
@@ -395,7 +396,6 @@
         states[index] = REMOVED;
         final double previous = values[index];
         values[index] = missingEntries;
-        --size;
         ++count;
         return previous;
     }
@@ -527,7 +527,6 @@
         public int key()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
@@ -544,7 +543,6 @@
         public double value()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
@@ -561,7 +559,6 @@
             throws ConcurrentModificationException, NoSuchElementException {
 
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
             }
 
             // advance on step
