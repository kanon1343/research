--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -116,7 +116,6 @@
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
-    this.forward      = forward;
     this.dirtyState   = true;
 
   }
@@ -209,6 +208,12 @@
    */
   public void shift() {
     previousTime = currentTime;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
   }
 
   /** Store the current step time.
@@ -271,8 +276,19 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
@@ -287,7 +303,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
