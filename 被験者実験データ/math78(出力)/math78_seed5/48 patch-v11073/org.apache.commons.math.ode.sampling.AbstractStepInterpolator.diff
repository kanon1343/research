--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,7 +89,7 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    currentState = null;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -109,6 +109,7 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
+	dirtyState = true;
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
@@ -209,6 +210,13 @@
    */
   public void shift() {
     previousTime = currentTime;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
   }
 
   /** Store the current step time.
@@ -271,7 +279,17 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		currentTime = Double.NaN;
+		final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
