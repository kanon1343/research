--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,9 +87,8 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    previousTime = currentTime;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -108,10 +107,21 @@
 
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
-    h                 = Double.NaN;
+    previousTime = currentTime;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
+    this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	this.forward = true;
+	currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -170,7 +180,7 @@
 
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
-    h                 = Double.NaN;
+    previousTime = currentTime;
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
@@ -272,7 +282,7 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+          forward = true;
           dirtyState = false;
       }
 
