--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,13 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    currentTime = Double.NaN;
+	final int n = (currentState == null) ? -1 : currentState.length;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
   }
 
   /** Simple constructor.
@@ -112,12 +118,90 @@
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
-    interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
-    this.forward      = forward;
+    interpolatedTime = Double.NaN;
+	dirtyState = true;
+	dirtyState = true;
+	dirtyState = true;
+	dirtyState = true;
+	dirtyState = true;
+	dirtyState = true;
+	dirtyState = true;
+	dirtyState = true;
+	dirtyState = true;
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	this.forward      = forward;
     this.dirtyState   = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
 
   }
 
@@ -243,7 +327,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -434,7 +517,7 @@
     interpolatedState       = (dimension < 0) ? null : new double[dimension];
     interpolatedDerivatives = (dimension < 0) ? null : new double[dimension];
 
-    finalized = true;
+    final int n = (currentState == null) ? -1 : currentState.length;
 
     return in.readDouble();
 
