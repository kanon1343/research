--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -94,7 +94,21 @@
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
         this.handler           = handler;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		g0Positive = increasing;
         this.maxCheckInterval  = maxCheckInterval;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
@@ -102,7 +116,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -150,6 +163,10 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		pendingEvent = true;
+		pendingEvent = true;
+		pendingEvent = true;
+		pendingEvent = true;
         g0Positive = g0 >= 0;
     }
 
@@ -170,7 +187,8 @@
         try {
 
             forward = interpolator.isForward();
-            final double t1 = interpolator.getCurrentTime();
+            final double t0 = interpolator.getPreviousTime();
+			final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
