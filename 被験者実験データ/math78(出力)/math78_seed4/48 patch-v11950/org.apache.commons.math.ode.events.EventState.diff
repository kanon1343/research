--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -149,7 +149,6 @@
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
         t0 = tStart;
-        g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
 
@@ -181,8 +180,24 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
+                pendingEventTime = Double.NaN;
+				pendingEventTime = Double.NaN;
+				pendingEventTime = Double.NaN;
+				interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
 
                 // check events occurrence
                 if (g0Positive ^ (gb >= 0)) {
@@ -213,7 +228,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    interpolator.setInterpolatedTime(tb);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
