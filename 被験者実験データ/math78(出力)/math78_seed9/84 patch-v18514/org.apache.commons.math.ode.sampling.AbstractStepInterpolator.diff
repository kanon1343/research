--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,17 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    h = -h;
+    previousTime = Double.NaN;
+	h = Double.NaN;
+	h = Double.NaN;
+	h = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
-    this.forward            = true;
-    this.dirtyState         = true;
+    h = -h;
+	this.forward            = true;
   }
 
   /** Simple constructor.
@@ -113,11 +114,12 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    h = -h;
+	finalized = false;
+	interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +181,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -217,6 +218,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
+	this.dirtyState = true;
+	this.dirtyState = true;
     h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
