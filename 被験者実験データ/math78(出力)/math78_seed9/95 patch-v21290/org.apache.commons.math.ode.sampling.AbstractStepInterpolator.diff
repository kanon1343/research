--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,13 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -106,7 +103,6 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
@@ -117,7 +113,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +174,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -217,6 +211,16 @@
   public void storeTime(final double t) {
 
     currentTime = t;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
     h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
