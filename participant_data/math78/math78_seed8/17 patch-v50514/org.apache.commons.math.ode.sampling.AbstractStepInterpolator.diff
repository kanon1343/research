--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,8 +87,22 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    interpolatedTime = Double.NaN;
     currentTime             = Double.NaN;
+	currentState = null;
+	currentState = null;
+	currentState = null;
+	currentState = null;
+	currentState = null;
+	currentState = null;
+	currentState = null;
+	currentState = null;
+	currentState = null;
+	currentState = null;
+	currentState = null;
+	currentState = null;
+	currentState = null;
+	currentState = null;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -113,7 +127,35 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
@@ -272,6 +314,52 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
+		h = Double.NaN;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
