--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -156,8 +156,6 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
-
         double ret = Double.NaN;
 
         double yMin = f.value(min);
@@ -237,7 +235,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -259,7 +256,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x1 = x1 - 0.5 * tolerance;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
