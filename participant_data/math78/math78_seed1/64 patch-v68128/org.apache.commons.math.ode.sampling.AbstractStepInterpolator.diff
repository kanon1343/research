--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,6 +90,50 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
+	this.dirtyState = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	this.dirtyState = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -97,6 +141,19 @@
     finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
+	finalized = true;
   }
 
   /** Simple constructor.
@@ -112,11 +169,26 @@
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
-    interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
-    this.forward      = forward;
+    dirtyState = true;
+	dirtyState = true;
+	dirtyState = true;
+	dirtyState = true;
+	dirtyState = true;
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	interpolatedState = new double[y.length];
+	this.forward      = forward;
     this.dirtyState   = true;
 
   }
@@ -218,8 +290,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +313,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -418,8 +487,6 @@
     currentTime   = in.readDouble();
     h             = in.readDouble();
     forward       = in.readBoolean();
-    dirtyState    = true;
-
     if (dimension < 0) {
         currentState = null;
     } else {
