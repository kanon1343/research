--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -228,6 +228,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
@@ -274,8 +276,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (Math.abs(x1 - x0) <= absoluteAccuracy) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
