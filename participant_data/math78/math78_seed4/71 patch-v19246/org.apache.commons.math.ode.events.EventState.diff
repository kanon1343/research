--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,14 +98,10 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -181,8 +177,36 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
+                pendingEventTime = Double.NaN;
+				previousEventTime = Double.NaN;
+				pendingEventTime = Double.NaN;
+				pendingEventTime = Double.NaN;
+				interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				increasing = gb >= ga;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
+				ga = gb;
 
                 // check events occurrence
                 if (g0Positive ^ (gb >= 0)) {
@@ -323,7 +347,6 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
