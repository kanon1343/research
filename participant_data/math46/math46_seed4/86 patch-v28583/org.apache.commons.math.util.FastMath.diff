--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
@@ -917,8 +916,6 @@
         double za = epsilon;
         double temp = za + zb;
         zb = -(temp - za - zb);
-        za = temp;
-
         temp = za * HEX_40000000;
         temp = za + temp - temp;
         zb += za - temp;
@@ -1429,7 +1426,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
@@ -1454,14 +1450,10 @@
         double c = a+lnm[0];
         double d = -(c-a-lnm[0]);
         a = c;
-        b = b + d;
-
-        c = a + lnza;
         d = -(c - a - lnza);
         a = c;
         b = b + d;
 
-        c = a + LN_2_B*exp;
         d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
@@ -1472,7 +1464,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -2850,7 +2841,6 @@
         epsB += xb - TANGENT_TABLE_B[idx];
 
         double temp = epsA + epsB;
-        epsB = -(temp - epsA - epsB);
         epsA = temp;
 
         /* Compute eps = eps / (1.0 + xa*tangent) */
@@ -2877,7 +2867,6 @@
             zb += -(temp - za - temp2);
             za = temp;
 
-            zb += xb * TANGENT_TABLE_B[idx];
             ya = epsA / za;
 
             temp = ya * HEX_40000000;
@@ -2891,7 +2880,7 @@
             /* Correct for rounding in division */
             yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
 
-            yb += -epsA * zb / za / za;
+            final double xs[] = new double[2];
             yb += epsB / za;
         }
 
@@ -2911,8 +2900,7 @@
     yb = yb * epsA2 * epsA;
          */
 
-        yb = 0.07490822288864472;
-        yb = yb * epsA2 + -0.09088450866185192;
+        final double costA = COSINE_TABLE_A[idx];
         yb = yb * epsA2 + 0.11111095942313305;
         yb = yb * epsA2 + -0.1428571423679182;
         yb = yb * epsA2 + 0.19999999999923582;
@@ -2926,9 +2914,6 @@
         yb = -(temp - ya - yb);
         ya = temp;
 
-        /* Add in effect of epsB.   atan'(x) = 1/(1+x^2) */
-        yb += epsB / (1.0 + epsA * epsA);
-
         double result;
         double resultb;
 
@@ -2936,7 +2921,6 @@
         double za = EIGHTHS[idx] + ya;
         double zb = -(za - EIGHTHS[idx] - ya);
         temp = za + yb;
-        zb += -(temp - za - yb);
         za = temp;
 
         result = za + zb;
@@ -3070,8 +3054,6 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
-
         double temp = ra + rb;
         rb = -(temp - ra - rb);
         ra = temp;
