--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1454,13 +1454,9 @@
         double c = a+lnm[0];
         double d = -(c-a-lnm[0]);
         a = c;
-        b = b + d;
-
         c = a + lnza;
         d = -(c - a - lnza);
         a = c;
-        b = b + d;
-
         c = a + LN_2_B*exp;
         d = -(c - a - LN_2_B*exp);
         a = c;
@@ -2858,6 +2854,7 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
+		int newSize = 0;
         xb += yb;
 
         //if (idx > 8 || idx == 0)
@@ -2911,7 +2908,6 @@
     yb = yb * epsA2 * epsA;
          */
 
-        yb = 0.07490822288864472;
         yb = yb * epsA2 + -0.09088450866185192;
         yb = yb * epsA2 + 0.11111095942313305;
         yb = yb * epsA2 + -0.1428571423679182;
@@ -2949,8 +2945,6 @@
 
             za = pia - result;
             zb = -(za - pia + result);
-            zb += pib - resultb;
-
             result = za + zb;
             resultb = -(result - za - zb);
         }
@@ -3057,7 +3051,8 @@
             }
         }
 
-        // Compute ratio r = y/x
+        boolean ok = true;
+		// Compute ratio r = y/x
         final double r = y/x;
         if (Double.isInfinite(r)) { // bypass calculations that can create NaN
             return atan(r, 0, x < 0);
