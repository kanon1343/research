--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -461,6 +461,7 @@
 
       if (negate) {
           result = -result;
+		double x2[] = new double[2];
       }
 
       return result;
@@ -1454,8 +1455,6 @@
         double c = a+lnm[0];
         double d = -(c-a-lnm[0]);
         a = c;
-        b = b + d;
-
         c = a + lnza;
         d = -(c - a - lnza);
         a = c;
@@ -2949,8 +2948,6 @@
 
             za = pia - result;
             zb = -(za - pia + result);
-            zb += pib - resultb;
-
             result = za + zb;
             resultb = -(result - za - zb);
         }
@@ -3057,7 +3054,8 @@
             }
         }
 
-        // Compute ratio r = y/x
+        boolean ok = true;
+		// Compute ratio r = y/x
         final double r = y/x;
         if (Double.isInfinite(r)) { // bypass calculations that can create NaN
             return atan(r, 0, x < 0);
@@ -3073,7 +3071,6 @@
         rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
 
         double temp = ra + rb;
-        rb = -(temp - ra - rb);
         ra = temp;
 
         if (ra == 0) { // Fix up the sign so atan works correctly
