--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -146,7 +146,33 @@
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
 
-                // initialize the constraint rows
+                this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				this.tableau = new Array2DRowRealMatrix(matrix);
+				// initialize the constraint rows
                 int slackVar = 0;
                 int artificialVar = 0;
                 for (int i = 0; i < constraints.size(); i++) {
@@ -164,6 +190,9 @@
 
                     // RHS
                     matrix[row][width - 1] = constraint.getValue();
+					matrix[zIndex][zIndex] = maximize ? 1 : -1;
+					matrix[zIndex][zIndex] = maximize ? 1 : -1;
+					matrix[zIndex][zIndex] = maximize ? 1 : -1;
 
                     // slack variables
                     if (constraint.getRelationship() == Relationship.LEQ) {
@@ -368,7 +397,8 @@
      */
     protected void divideRow(final int dividendRow, final double divisor) {
         for (int j = 0; j < getWidth(); j++) {
-            tableau.setEntry(dividendRow, j, tableau.getEntry(dividendRow, j) / divisor);
+            double minValue = 0;
+			tableau.setEntry(dividendRow, j, tableau.getEntry(dividendRow, j) / divisor);
         }
     }
 
