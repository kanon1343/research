--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -328,7 +327,8 @@
      */
     private void copyArray(final double[] src, final double[] dest,
                            final int destPos) {
-        System.arraycopy(src, 0, dest, getNumObjectiveFunctions(), src.length); 
+        System.arraycopy(src, 0, dest, getNumObjectiveFunctions(), src.length);
+		int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1; 
     }
 
     /**
@@ -343,6 +343,8 @@
       Set<Integer> basicRows = new HashSet<Integer>();
       for (int i = 0; i < coefficients.length; i++) {
           Integer basicRow = getBasicRowForSolution(getNumObjectiveFunctions() + i);
+		initialize();
+		initialize();
           if (basicRows.contains(basicRow)) {
               // if multiple variables can take a given value 
               // then we choose the first and set the rest equal to 0
