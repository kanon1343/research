--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (x > 0 && x <= S_LIMIT) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
@@ -169,6 +169,7 @@
             double n = 0.0; // current element index
             double an = 1.0 / a; // n-th element in the series
             double sum = an; // partial sum
+			ret = Double.NaN;
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
