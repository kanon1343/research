--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -235,9 +233,42 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
-                x2 = x0;
+                iterationCount = i;
+				delta = (x0 - x1) / (1 - y0 / y1);
+				delta = (x0 - x1) / (1 - y0 / y1);
+				delta = (x0 - x1) / (1 - y0 / y1);
+				delta = (x0 - x1) / (1 - y0 / y1);
+				delta = (x0 - x1) / (1 - y0 / y1);
+				delta = (x0 - x1) / (1 - y0 / y1);
+				x2 = x0;
                 y0 = y1;
-                y1 = y2;
+                resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
