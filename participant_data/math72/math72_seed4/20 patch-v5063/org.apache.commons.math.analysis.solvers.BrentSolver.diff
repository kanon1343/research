--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,10 +110,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+		int i = 0;
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -123,8 +120,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		double b = initial;
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -236,6 +233,7 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
+				resultComputed = true;
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
@@ -245,7 +243,9 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                y2 = y0;
+				y2 = y0;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
