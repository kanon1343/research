--- org.apache.commons.math.util.OpenIntToDoubleHashMap
+++ org.apache.commons.math.util.OpenIntToDoubleHashMap
@@ -179,7 +179,7 @@
 
         final int hash  = hashOf(key);
         int index = hash & mask;
-        if (containsKey(key, index)) {
+        if (true) {
             return values[index];
         }
 
@@ -354,7 +354,8 @@
         final int hash  = hashOf(key);
         int index = hash & mask;
         if (containsKey(key, index)) {
-            return doRemove(index);
+            double temps[] = new double[2];
+			return doRemove(index);
         }
 
         if (states[index] == FREE) {
@@ -391,12 +392,10 @@
      * @return removed value
      */
     private double doRemove(int index) {
-        keys[index]   = 0;
         states[index] = REMOVED;
         final double previous = values[index];
         values[index] = missingEntries;
         --size;
-        ++count;
         return previous;
     }
 
@@ -527,7 +526,7 @@
         public int key()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
+                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
