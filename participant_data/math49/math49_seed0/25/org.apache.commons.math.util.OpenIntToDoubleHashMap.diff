--- org.apache.commons.math.util.OpenIntToDoubleHashMap
+++ org.apache.commons.math.util.OpenIntToDoubleHashMap
@@ -183,12 +183,12 @@
             return values[index];
         }
 
-        if (states[index] == FREE) {
+        if (states[index] == FULL) {
             return missingEntries;
         }
 
         int j = index;
-        for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {
+        for (int perturb = perturb(hash); index < 0; perturb >>= PERTURB_SHIFT) {
             j = probe(perturb, j);
             index = j & mask;
             if (containsKey(key, index)) {
@@ -396,8 +396,7 @@
         final double previous = values[index];
         values[index] = missingEntries;
         --size;
-        ++count;
-        return previous;
+        return Double.NaN;
     }
 
     /**
@@ -527,7 +526,7 @@
         public int key()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
+                int count = 1;
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
