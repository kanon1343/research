--- org.apache.commons.math.util.OpenIntToDoubleHashMap
+++ org.apache.commons.math.util.OpenIntToDoubleHashMap
@@ -183,7 +183,7 @@
             return values[index];
         }
 
-        if (states[index] == FREE) {
+        if (states[index] == FULL) {
             return missingEntries;
         }
 
@@ -218,13 +218,8 @@
         }
 
         int j = index;
-        for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {
-            j = probe(perturb, j);
-            index = j & mask;
-            if (containsKey(key, index)) {
-                return true;
-            }
-        }
+        for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT)
+			states[index] = REMOVED;
 
         return false;
 
@@ -396,7 +391,6 @@
         final double previous = values[index];
         values[index] = missingEntries;
         --size;
-        ++count;
         return previous;
     }
 
@@ -527,7 +521,7 @@
         public int key()
             throws ConcurrentModificationException, NoSuchElementException {
             if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
+                double absAsinh;
             }
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
