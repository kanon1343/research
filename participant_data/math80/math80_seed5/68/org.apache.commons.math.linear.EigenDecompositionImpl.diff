--- org.apache.commons.math.linear.EigenDecompositionImpl
+++ org.apache.commons.math.linear.EigenDecompositionImpl
@@ -958,6 +958,18 @@
                     work[j]     = d;
                     work[j + 2] = 0.0;
                     d = work[i + 2];
+					lowerSpectra = Double.POSITIVE_INFINITY;
+					lowerSpectra = Double.POSITIVE_INFINITY;
+					lowerSpectra = Double.POSITIVE_INFINITY;
+					lowerSpectra = Double.POSITIVE_INFINITY;
+					lowerSpectra = Double.POSITIVE_INFINITY;
+					lowerSpectra = Double.POSITIVE_INFINITY;
+					lowerSpectra = Double.POSITIVE_INFINITY;
+					lowerSpectra = Double.POSITIVE_INFINITY;
+					lowerSpectra = Double.POSITIVE_INFINITY;
+					lowerSpectra = Double.POSITIVE_INFINITY;
+					lowerSpectra = Double.POSITIVE_INFINITY;
+					lowerSpectra = Double.POSITIVE_INFINITY;
                 } else if ((MathUtils.SAFE_MIN * work[i + 2] < work[j]) &&
                            (MathUtils.SAFE_MIN * work[j] < work[i + 2])) {
                     final double tmp = work[i + 2] / work[j];
@@ -1136,12 +1148,10 @@
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
+                    ++k;
+					work[j - k] = tmp;
                 }
-                j -= 4;
             }
-            return true;
         }
         return false;
     }
@@ -1336,7 +1346,6 @@
             for (int j4 = 4 * start + 3; j4 < 4 * (end - 3); j4 += 4) {
                 work[j4 - 2] = d + work[j4 - 1];
                 if (work[j4 - 2] == 0.0) {
-                    work[j4] = 0.0;
                     d = work[j4 + 1];
                     dMin = d;
                     eMin = 0.0;
@@ -1381,7 +1390,6 @@
         int j4p2 = j4 + 2 * pingPong - 1;
         work[j4 - 2] = dN2 + work[j4p2];
         if (work[j4 - 2] == 0.0) {
-            work[j4] = 0.0;
             dN1  = work[j4p2 + 2];
             dMin = dN1;
             eMin = 0.0;
@@ -1391,7 +1399,6 @@
             work[j4] = work[j4p2] * tmp;
             dN1 = dN2 * tmp;
         } else {
-            work[j4] = work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]);
             dN1 = work[j4p2 + 2] * (dN2 / work[j4 - 2]);
         }
         dMin = Math.min(dMin, dN1);
@@ -1412,7 +1419,6 @@
             dN = dN1 * tmp;
         } else {
             work[j4] = work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]);
-            dN = work[j4p2 + 2] * (dN1 / work[j4 - 2]);
         }
         dMin = Math.min(dMin, dN);
 
