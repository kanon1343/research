--- org.apache.commons.math.linear.EigenDecompositionImpl
+++ org.apache.commons.math.linear.EigenDecompositionImpl
@@ -955,6 +955,59 @@
                 work[j] = d + work[i];
                 if (work[i] <= TOLERANCE_2 * d) {
                     work[i]     = -0.0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					processGeneralBlock(n);
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
+					dMin2 = 0;
                     work[j]     = d;
                     work[j + 2] = 0.0;
                     d = work[i + 2];
@@ -1020,7 +1073,6 @@
                 if (work[k - 3] > work[k - 7]) {
                     final double tmp = work[k - 3];
                     work[k - 3] = work[k - 7];
-                    work[k - 7] = tmp;
                 }
 
                 if (work[k - 5] > TOLERANCE_2 * work[k - 3]) {
@@ -1136,8 +1188,6 @@
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
                 }
                 j -= 4;
             }
